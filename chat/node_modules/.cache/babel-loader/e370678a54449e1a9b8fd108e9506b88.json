{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { CALL_TYPES, DEFAULT_ENGINE } from \"./config\";\nimport { camelToUnderscore, completionURL } from \"./utils\";\nimport axios from \"axios\";\n\nvar OpenAIAPI = function OpenAIAPI(_a) {\n  var apiKey = _a.apiKey,\n      _b = _a.callType,\n      callType = _b === void 0 ? CALL_TYPES.COMPLETION : _b,\n      payload = _a.payload,\n      responseHandler = _a.responseHandler,\n      errorHandler = _a.errorHandler;\n\n  var sendRequest = function sendRequest(url, method, opts) {\n    var data = {};\n\n    for (var key in opts) {\n      data[camelToUnderscore(key)] = opts[key];\n    }\n\n    return axios({\n      url: url,\n      headers: {\n        Authorization: \"Bearer \" + apiKey,\n        \"Content-Type\": \"application/json\"\n      },\n      data: Object.keys(data).length ? data : \"\",\n      method: method\n    });\n  };\n\n  useEffect(function () {\n    if (!payload.engine) {\n      payload.engine = DEFAULT_ENGINE;\n    }\n\n    var url = \"\";\n\n    switch (callType) {\n      case CALL_TYPES.COMPLETION:\n        url = completionURL(payload.engine);\n        delete payload.engine;\n        break;\n    }\n\n    sendRequest(url, \"post\", payload).then(function (res) {\n      responseHandler(res.data);\n    }).catch(function (err) {\n      if (errorHandler) errorHandler(err);\n    });\n  }, [apiKey, payload]);\n  return React.createElement(React.Fragment, null);\n};\n\nexport default OpenAIAPI;","map":null,"metadata":{},"sourceType":"module"}